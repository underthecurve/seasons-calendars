windspeed = as.numeric(gsub("mph", "", windspeed)),
date = substring(url, 51, 59)) %>%
separate(date, c("year", "month", "day"), sep = "/")
}
files <- lapply(urls, weather_data)
weather_data <- function(url) {
page <- url %>%
read_html()
tbls_ls <- page %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE)
hourly <- tbls_ls[[1]]
colnames(hourly) <- tolower(colnames(hourly))
hourly <- hourly %>%
rename(time = `time (cdt)`, temp = temp., dewpoint = `dew point`, windspeed = `wind speed`) %>%
mutate(temp = as.numeric(gsub("°F", "", temp)),
dewpoint = as.numeric(gsub("°F", "", dewpoint)),
windspeed = as.numeric(gsub("mph", "", windspeed)),
date = substring(url, 51, 59)) %>%
separate(date, c("year", "month", "day"), sep = "/")
}
files <- lapply(urls, weather_data)
files[[1]]
files[[2]]
dates <- c("2007/5/27", "2008/5/31",
"2009/5/30", "2010/5/29",
"2011/5/28", "2012/5/26",
"2013/6/1", "2014/5/31",
"2015/5/30", "2016/5/21",
"2017/5/20", "2018/6/2")
urls <- sprintf("https://www.wunderground.com/history/airport/KPWK/%s/DailyHistory.html?req_city=Evanston&req_state=IL&req_statename=Illinois&reqdb.zip=60208&reqdb.magic=1&reqdb.wmo=99999", dates)
weather_data <- function(url) {
page <- url %>%
read_html()
tbls_ls <- page %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE)
hourly <- tbls_ls[[1]]
colnames(hourly) <- tolower(colnames(hourly))
hourly <- hourly %>%
rename(time = `time (cdt)`, temp = temp., dewpoint = `dew point`, windspeed = `wind speed`) %>%
mutate(temp = as.numeric(gsub("°F", "", temp)),
dewpoint = as.numeric(gsub("°F", "", dewpoint)),
windspeed = as.numeric(gsub("mph", "", windspeed)),
date = substring(url, 51, 59)) %>%
separate(date, c("year", "month", "day"), sep = "/")
}
files <- lapply(urls, weather_data)
files[[1]]
files[[12]]
files[[11]]
files[[10]]
files[[2]]
files[[3]]
files <- lapply(urls, weather_data)
files[[3]]
files
urls
urls
page <- 'https://www.wunderground.com/history/airport/KPWK/2009/5/30/DailyHistory.html?req_city=Evanston&req_state=IL&req_statename=Illinois&reqdb.zip=60208&reqdb.magic=1&reqdb.wmo=99999' %>%
read_html()
tbls_ls <- page %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE)
tbls_ls
files <- lapply(urls, weather_data)
files
urls[1]
urls[2]
urls[3]
weather_data(urls[3])
hourly
weather_data(urls[3])
test <- weather_data(urls[3])
test
for (1 in length(urls)){
test <- weather_data(urls[3])
}
for (i in 1:length(urls)){
test <- weather_data(urls[i])
}
urls
sapply(urls, weather_data)
sapply(urls, weather_data)
year.2007 <- weather_data(urls[1])
year.2008 <- weather_data(urls[2])
year.2009 <- weather_data(urls[3])
year.2010 <- weather_data(urls[4])
year.2011 <- weather_data(urls[5])
year.2012 <- weather_data(urls[6])
year.2013 <- weather_data(urls[7])
year.2014 <- weather_data(urls[8])
year.2015 <- weather_data(urls[9])
year.2016 <- weather_data(urls[10])
year.2017 <- weather_data(urls[11])
year.2018 <- weather_data(urls[12])
year.2017
dates <- c("2007/5/27", "2008/5/31",
"2009/5/30", "2010/5/29",
"2011/5/28", "2012/5/26",
"2013/6/1", "2014/5/31",
"2015/5/30", "2016/5/21",
"2017/5/20")
urls <- sprintf("https://www.wunderground.com/history/airport/KPWK/%s/DailyHistory.html?req_city=Evanston&req_state=IL&req_statename=Illinois&reqdb.zip=60208&reqdb.magic=1&reqdb.wmo=99999", dates)
weather_data <- function(url) {
page <- url %>%
read_html()
tbls_ls <- page %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE)
hourly <- tbls_ls[[1]]
colnames(hourly) <- tolower(colnames(hourly))
hourly <- hourly %>%
rename(time = `time (cdt)`, temp = temp., dewpoint = `dew point`, windspeed = `wind speed`) %>%
mutate(temp = as.numeric(gsub("°F", "", temp)),
dewpoint = as.numeric(gsub("°F", "", dewpoint)),
windspeed = as.numeric(gsub("mph", "", windspeed)),
date = substring(url, 51, 59)) %>%
separate(date, c("year", "month", "day"), sep = "/")
}
all.years <- lapply(urls, weather_data) # this doesn't work sadly
years <- lapply(urls, weather_data)
years
do.call(rbind.data.frame, years)
data.frame(t(sapply(years,c)))
data.frame(t(sapply(years,c))) %>% View()
data.frame(Reduce(rbind, years))
years
str(years)
View(years[1])
weather_data <- function(url) {
page <- url %>%
read_html()
tbls_ls <- page %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE)
hourly <- tbls_ls[[1]]
colnames(hourly) <- tolower(colnames(hourly))
hourly <- hourly %>%
rename(time = `time (cdt)`, temp = temp., dewpoint = `dew point`, windspeed = `wind speed`) %>%
mutate(temp = as.numeric(gsub("°F", "", temp)),
dewpoint = as.numeric(gsub("°F", "", dewpoint)),
windspeed = as.numeric(gsub("mph", "", windspeed)),
precip = as.numeric(gsub("in", "", precip)),
date = substring(url, 51, 59)) %>%
separate(date, c("year", "month", "day"), sep = "/") %>%
select(time, temp, dewpoint, windspeed, precip, events, conditions, year, month, day)
}
years <- lapply(urls, weather_data)
data.frame(Reduce(rbind, years))
years.df <- data.frame(Reduce(rbind, years))
View(years.df)
?strptime()
years.df$test <- strptime(years.df$time)
years.df$test <- strptime(years.df$time, format = "%I:%M %p")
View(years.df)
View(years.df)
years.df %>% filter(time < "12:52")
years.df %>% filter(time < "12:52 AM")
years.df %>% filter(test < "12:52 AM")
str(years.df)
years.df %>% filter(as.POSIXct(test) < "12:52 AM")
years.df$test <- strptime(years.df$time, format = "%I:%M %p")
years.df$test <- as.POSIXct(strptime(years.df$time, format = "%I:%M %p"))
View(years.df)
urls
years.df %>% filter(as.POSIXct(test) < "12:52 AM")
years.df %>% filter(test < "12:52 AM")
View(years.df)
format(years.df$test, "%s") # month
format(years.df$test, "%H") # month
install.packages("gganimate")
setwd("~/Documents/seasons")
library('tidyverse')
library('lubridate')
library('reshape2')
library('showtext')
theme <- theme_get()
theme$text$family <- "wqy-microhei"
theme_set(theme)
dates <- read_csv('seasons.csv')
dates <- dates %>% mutate(start = mdy(start),
end = mdy(end))
dates.m <- melt(dates, measure.vars = c('start', 'end'))
dates$name.f <- factor(dates$name, levels = c('Winter',
'Autumn',
'Summer',
'Spring/立春'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
theme$text$family <- "PingFang SC"
theme_set(theme)
dates <- read_csv('seasons.csv')
dates <- dates %>% mutate(start = mdy(start),
end = mdy(end))
dates.m <- melt(dates, measure.vars = c('start', 'end'))
dates$name.f <- factor(dates$name, levels = c('Winter',
'Autumn',
'Summer',
'Spring/立春'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
library('tidyverse')
library('lubridate')
library('reshape2')
library('showtext')
theme <- theme_get()
theme$text$family <- "PingFang SC"
theme_set(theme)
dates <- read_csv('seasons.csv')
dates <- dates %>% mutate(start = mdy(start),
end = mdy(end))
dates.m <- melt(dates, measure.vars = c('start', 'end'))
dates$name.f <- factor(dates$name, levels = c('Winter',
'Autumn',
'Summer',
'Spring/立春'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
View(dates)
ggplot(dates, aes(x = name, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
dates$name.f <- factor(dates$name, levels = c('Winter',
'立冬',
'Autumn',
'Summer',
'Spring'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
dates$name.f <- factor(dates$name, levels = c('Winter',
'立冬',
'Autumn',
'立秋',
'Summer',
'立夏',
'Spring',
'立春'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(position = position_dodge(.5), size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 4) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5) + facet_wrap(~calendar) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
library('tidyverse')
library('lubridate')
library('reshape2')
library('showtext')
theme <- theme_get()
theme$text$family <- "PingFang SC"
theme_set(theme)
dates <- read_csv('seasons.csv')
dates <- dates %>% mutate(start = mdy(start),
end = mdy(end))
dates$name.f <- factor(dates$name, levels = c('立冬 / Winter',
'立秋 / Autumn',
'立夏 / Summer',
'立春 / Spring')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5) + facet_wrap(~calendar) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
start_date <- as.Date('2017-01-01')
ggplot(dates.m, aes(value, season, color = calendar)) +
geom_line(data = dates.m %>% filter(calendar == 'Chinese')) +
geom_line(data = dates.m %>% filter(calendar == 'Astronomical')) +
scale_x_date(date_labels = "%Y %b", limits = c(start_date, NA), date_breaks = '1 year')
dates.m <- melt(dates, measure.vars = c('start', 'end'))
dates$name.f <- factor(dates$name, levels = c('立冬 / Winter',
'立秋 / Autumn',
'立夏 / Summer',
'立春 / Spring'))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5) + facet_wrap(~calendar) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~calendar) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~name.f)
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~name.f) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
dates$name.f <- factor(dates$name.f, levels = rev(levels(dates$name.f)))
ggplot(dates, aes(x = name.f, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~name.f) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~name.f) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = 1, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5)) + facet_wrap(~name.f) +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = 1, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.5))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = 1, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3)) + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month') +
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3)) + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month') +
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme_bw(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major.x = element_line(colour="black", linetype = "dashed"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0)) +
scale_x_date(date_labels = "%Y %b", limits = c(start_date, NA), date_breaks = '1 year')
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme_bw(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major.x = element_line(colour="black", linetype = "dashed"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme_bw(base_size = 20) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank()
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
start_date <- as.Date('2017-01-01')
ggplot(dates.m, aes(value, season, color = calendar)) +
geom_line(data = dates.m %>% filter(calendar == 'Chinese')) +
geom_line(data = dates.m %>% filter(calendar == 'Astronomical')) +
scale_x_date(date_labels = "%Y %b", limits = c(start_date, NA), date_breaks = '1 year')
dates.m <- melt(dates, measure.vars = c('start', 'end'))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank()
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
start_date <- as.Date('2017-01-01')
ggplot(dates.m, aes(value, season, color = calendar)) +
geom_line(data = dates.m %>% filter(calendar == 'Chinese')) +
geom_line(data = dates.m %>% filter(calendar == 'Astronomical')) +
scale_x_date(date_labels = "%Y %b", limits = c(start_date, NA), date_breaks = '1 year'))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank())
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank(),
axis.ticks.y = element_blank())
ggplot(dates) +
geom_segment(aes(x = start, xend = end, y = term, yend = term,
color = calendar), alpha = .8) +
scale_x_date(date_labels = "%Y %b", date_breaks = '1 month')
start_date <- as.Date('2017-01-01')
ggplot(dates.m, aes(value, season, color = calendar)) +
geom_line(data = dates.m %>% filter(calendar == 'Chinese')) +
geom_line(data = dates.m %>% filter(calendar == 'Astronomical')) +
scale_x_date(date_labels = "%Y %b", limits = c(start_date, NA), date_breaks = '1 year'))
dates.m <- melt(dates, measure.vars = c('start', 'end'))
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month')+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank(),
axis.ticks.y = element_blank())
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month',
date_minor_breaks = "1 day")+
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank(),
axis.ticks.y = element_blank())
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month',
date_minor_breaks = "1 day") +
theme(
axis.text = element_text(size = 11)
) + theme(panel.grid.minor.x = element_blank(),
axis.line.x = element_line(color = 'black'),
panel.background = element_blank(),
axis.ticks.y = element_blank())
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month',
date_minor_breaks = "1 day")
ggplot(dates, aes(x = calendar, y = start, ymin = start, ymax = end, color=calendar)) +
geom_linerange(size = 5, position = position_dodge(.3))  +
coord_flip() + labs(x = '', y= '') +
scale_y_date(date_labels = "%b", date_breaks = '1 month',
date_minor_breaks = "1 day")
